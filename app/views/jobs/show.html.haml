#submenu.button_group
  = link_to 'Listing Jobs', jobs_path, class: "button"
  = link_to 'Job Details', job_path(@job), class: "button active"
  = link_to 'Edit Job', edit_job_path(@job), class: "button"
  = link_to 'New Job', new_job_path, class: "button button-green"
.menu_div

.panel.float
  %h3 Name
  .pc
    = @job.name
.panel.float
  %h3 Server
  .pc
    = @job.server ? link_to(@job.server.name, server_path(@job.server)) : "(none)"
    - if @job.server.present?
      %small= "(#{@job.server.username}@#{@job.server.host})"
.panel.max
  %h3= @job.interpreter.try(:path).presence || "Script"
  %pre#script.pc.script.CodeMirror.cm-s-monokai{ data: { interpreter: @job.interpreter.try(:path) } }
    = preserve do
      = @job.script

- if @job.interpreter.nil? # only for jobs without interpreters (default)
  - get_parameters_of(@job.script).each do |param|
    .panel.float
      %h3= param
      .pc
        = text_field_tag nil, nil, id: nil, class: "custom_param", placeholder: "value", data: { param: param }
        - if @job_parameters.include? param
          .select
            = select_tag nil, options_for_select([['(select)','']] + @job_parameters[param]), id: nil, class: "fill_custom_param"
        - else
          %small= "No '#{param}' found in 'job_parameters' constant."
.clear

- if @job.interpreter.nil? # only for jobs without interpreters (default)
  .misc
    = check_box_tag :exit_if_non_zero, 1, true
    = label_tag :exit_if_non_zero, "Exit if previous command returns a non-zero status"

.field
  = link_to 'Run', '', data: { cancel: 'Cancel', run: 'Run', to: run_job_path(@job) }, id: "run_job", class: "button button-blue"

.separator

%pre#output Pending.

- unless @job.time_stats.empty?
  .separator
  .panel.max
    %h3 Statistics
    #chart{ data: { json: timestats_job_path(@job) } }
